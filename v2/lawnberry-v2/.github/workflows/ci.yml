name: LawnBerry Pi v2 CI

on:
  push:
    branches: ["main", "001-build-lawnberry-pi"]
  pull_request:
    branches: ["main"]

env:
  PYTHON_VERSION: "3.11"

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      
      - name: Run ruff linting
        run: |
          uv run ruff check src/ tests/ --output-format=github
      
      - name: Run ruff formatting check
        run: |
          uv run ruff format --check src/ tests/
      
      - name: Run black formatting check
        run: |
          uv run black --check src/ tests/
      
      - name: Run mypy type checking
        run: |
          uv run mypy src/ --ignore-missing-imports

  constitutional-compliance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check forbidden packages
        run: |
          if grep -r 'import.*\(pycoral\|edgetpu\)' src/ || grep -r 'from.*\(pycoral\|edgetpu\)' src/; then
            echo "ERROR: pycoral/edgetpu forbidden in main environment (use Coral isolated venv)"
            exit 1
          fi
      
      - name: Check TODO format
        run: |
          if grep -rn 'TODO[^(]' src/ tests/ docs/ 2>/dev/null; then
            echo "ERROR: Unlinked TODOs found. Use TODO(v3): format with GitHub issue links"
            exit 1
          fi
      
      - name: Validate ARM64 platform markers
        run: |
          if ! grep -q "platform_machine=='aarch64'" pyproject.toml; then
            echo "ERROR: Missing ARM64 platform markers in pyproject.toml"
            exit 1
          fi
      
      - name: Check UV forbidden packages config
        run: |
          if ! grep -q "forbid-packages.*pycoral.*edgetpu" pyproject.toml; then
            echo "ERROR: Missing UV forbidden packages configuration"
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      
      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src/lawnberry --cov-report=xml --cov-report=term-missing

  docs-drift-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for docs updates
        run: |
          # Get list of changed source files
          CHANGED_SRC_FILES=$(git diff --name-only HEAD~1..HEAD -- 'src/**' 'pyproject.toml' 'scripts/**' 'systemd/**' || true)
          
          if [ -n "$CHANGED_SRC_FILES" ]; then
            echo "Source files changed:"
            echo "$CHANGED_SRC_FILES"
            
            # Check if corresponding docs were updated
            CHANGED_DOC_FILES=$(git diff --name-only HEAD~1..HEAD -- 'docs/**' 'spec/**' 'README.md' || true)
            
            if [ -z "$CHANGED_DOC_FILES" ]; then
              echo "ERROR: Source code changed but no documentation updated"
              echo "Constitutional requirement: Any code change MUST update /docs and /spec"
              exit 1
            else
              echo "Documentation updated:"
              echo "$CHANGED_DOC_FILES"
            fi
          fi
