openapi: 3.1.0
info:
  title: LawnBerry Pi v2 Hardware Integration API
  version: 0.1.0-plan
  description: >
    Contract baseline for LawnBerry Pi v2 hardware integration and UI completion. Covers
    telemetry, map configuration, control commands, settings persistence, documentation
    publishing, and verification artifacts.
servers:
  - url: https://lawnberry.local/api/v2
    description: Production mower (Pi 5)
  - url: https://lawnberry-dev.local/api/v2
    description: SIM_MODE development environment
paths:
  /telemetry/stream:
    get:
      summary: Fetch latest telemetry snapshot batch
      description: Returns the most recent telemetry values for each hardware component plus derived health information. Supports pagination for historical review.
      operationId: getTelemetryStream
      parameters:
        - name: since
          in: query
          description: Return telemetry entries newer than this ISO8601 timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Number of telemetry records to return (default 50, max 500).
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 50
      responses:
        '200':
          description: Telemetry data retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HardwareTelemetryStream'
                  next_since:
                    type: string
                    format: date-time
                    description: Cursor for next page.
                  latency_summary_ms:
                    type: object
                    additionalProperties:
                      type: number
                    description: Average latency per component for this batch.
        '503':
          description: Telemetry subsystem unavailable.
  /telemetry/ping:
    post:
      summary: Measure telemetry end-to-end latency
      operationId: postTelemetryPing
      description: >
        Triggers a round-trip ping on the telemetry pipeline to verify end-to-end latency meets
        constitutional guardrails (≤250 ms Pi 5 / ≤350 ms Pi 4B).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component_id:
                  $ref: '#/components/schemas/TelemetryComponentId'
                sample_count:
                  type: integer
                  default: 10
                  minimum: 1
                  maximum: 100
      responses:
        '200':
          description: Latency metrics recorded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  latency_ms_p95:
                    type: number
                  latency_ms_p50:
                    type: number
                  samples:
                    type: array
                    items:
                      type: number
        '422':
          description: Invalid component id or sample count.
  /hardware/robohat:
    get:
      summary: Retrieve RoboHAT firmware status
      description: Provides firmware metadata, watchdog heartbeat, and current safety state from the RoboHAT RP2040 bridge.
      operationId: getRoboHatStatus
      responses:
        '200':
          description: RoboHAT status returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoboHatStatus'
        '503':
          description: Unable to reach RoboHAT controller.
  /map/configuration:
    get:
      summary: Read current map configuration
      operationId: getMapConfiguration
      responses:
        '200':
          description: Map configuration retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapConfigurationEnvelope'
    put:
      summary: Replace map configuration
      operationId: putMapConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapConfigurationEnvelope'
      responses:
        '200':
          description: Configuration saved and acknowledged.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [accepted]
                  updated_at:
                    type: string
                    format: date-time
        '400':
          description: Invalid geometry or overlapping zones.
  /control/drive:
    post:
      summary: Issue manual drive command
      operationId: postDriveCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriveCommandRequest'
      responses:
        '202':
          description: Drive command accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCommandResponse'
        '423':
          description: Safety lockout preventing drive command.
  /control/blade:
    post:
      summary: Toggle blade state
      operationId: postBladeToggle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BladeCommandRequest'
      responses:
        '202':
          description: Blade command accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCommandResponse'
        '423':
          description: Safety conditions prevent blade engagement.
  /control/emergency:
    post:
      summary: Trigger emergency stop
      operationId: postEmergencyStop
      responses:
        '202':
          description: Emergency stop broadcast.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCommandResponse'
  /settings:
    get:
      summary: Retrieve configuration profile
      operationId: getSettingsProfile
      responses:
        '200':
          description: Settings profile returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsProfile'
    put:
      summary: Update configuration profile
      operationId: putSettingsProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsProfileUpdateRequest'
      responses:
        '200':
          description: Settings saved, audit log created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile_version:
                    type: string
                  updated_at:
                    type: string
                    format: date-time
        '409':
          description: Outdated profile version supplied.
  /docs/bundle:
    get:
      summary: List documentation bundle entries
      operationId: getDocumentationBundle
      responses:
        '200':
          description: Bundle metadata returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationBundle'
  /verification-artifacts:
    post:
      summary: Register verification artifact metadata
      operationId: postVerificationArtifact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationArtifactRequest'
      responses:
        '201':
          description: Artifact recorded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationArtifact'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TelemetryComponentId:
      type: string
      enum:
        - imu
        - gps
        - power
        - tof_left
        - tof_right
        - blade_motor
        - drive_left
        - drive_right
        - coral
        - hailo
        - cpu
    HardwareTelemetryStream:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        component_id:
          $ref: '#/components/schemas/TelemetryComponentId'
        value:
          oneOf:
            - type: number
            - type: object
        status:
          type: string
          enum: [healthy, warning, fault]
        latency_ms:
          type: number
        metadata:
          type: object
          additionalProperties: true
    RoboHatStatus:
      type: object
      properties:
        firmware_version:
          type: string
        watchdog_heartbeat_ms:
          type: number
        last_contact:
          type: string
          format: date-time
        safety_state:
          type: string
          enum: [nominal, lockout, emergency_stop]
        diagnostics:
          type: object
          additionalProperties: true
    MapZone:
      type: object
      properties:
        zone_id:
          type: string
          format: uuid
        zone_type:
          type: string
          enum: [boundary, exclusion, home, am_sun, pm_sun]
        geometry:
          type: object
          description: GeoJSON polygon or point (WGS84)
        priority:
          type: integer
        color:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'
        last_modified:
          type: string
          format: date-time
    MapConfigurationEnvelope:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/MapZone'
        provider:
          type: string
          enum: [google-maps, osm]
        updated_by:
          type: string
        updated_at:
          type: string
          format: date-time
    DriveCommandRequest:
      type: object
      required: [session_id, vector]
      properties:
        session_id:
          type: string
          format: uuid
        vector:
          type: object
          properties:
            linear:
              type: number
            angular:
              type: number
        duration_ms:
          type: integer
          minimum: 0
        reason:
          type: string
    BladeCommandRequest:
      type: object
      required: [session_id, action]
      properties:
        session_id:
          type: string
          format: uuid
        action:
          type: string
          enum: [engage, disengage]
        reason:
          type: string
    ControlCommandResponse:
      type: object
      properties:
        result:
          type: string
          enum: [accepted, rejected, blocked]
        status_reason:
          type: string
        telemetry_snapshot:
          $ref: '#/components/schemas/HardwareTelemetryStream'
        audit_id:
          type: string
          format: uuid
    SettingsProfile:
      type: object
      properties:
        profile_version:
          type: string
        hardware:
          type: object
        network:
          type: object
        telemetry:
          type: object
        simulation_mode:
          type: boolean
        ai_acceleration:
          type: string
          enum: [coral, hailo, cpu]
        branding_checksum:
          type: string
        updated_at:
          type: string
          format: date-time
    SettingsProfileUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/SettingsProfile'
        - type: object
          properties:
            expected_profile_version:
              type: string
    DocumentationBundle:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              doc_id:
                type: string
              title:
                type: string
              version:
                type: string
              last_updated:
                type: string
                format: date-time
              checksum:
                type: string
              offline_available:
                type: boolean
    VerificationArtifactRequest:
      type: object
      required: [type, location, linked_requirements]
      properties:
        type:
          type: string
          enum: [telemetry_log, ui_screencast, doc_diff, performance_report]
        location:
          type: string
        summary:
          type: string
        linked_requirements:
          type: array
          items:
            type: string
        created_by:
          type: string
        metadata:
          type: object
          additionalProperties: true
    VerificationArtifact:
      allOf:
        - $ref: '#/components/schemas/VerificationArtifactRequest'
        - type: object
          properties:
            artifact_id:
              type: string
              format: uuid
            created_at:
              type: string
              format: date-time
security:
  - bearerAuth: []
