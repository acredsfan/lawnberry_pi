name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.9'

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install code quality tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy black isort bandit safety
        pip install -r requirements.txt
    
    - name: Run Black formatting check
      run: |
        black --check --diff src/ tests/ scripts/
    
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff src/ tests/ scripts/
    
    - name: Run flake8 linting
      run: |
        flake8 src/ tests/ scripts/ --max-line-length=100 --exclude=__pycache__,*.pyc,.git,venv,env
    
    - name: Run mypy type checking
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional
    
    - name: Run bandit security analysis
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ --severity-level medium
    
    - name: Run safety dependency check
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  pre-commit-check:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    
    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files --show-diff-on-failure

  dead-code-check:
    name: Dead Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install vulture
      run: |
        python -m pip install --upgrade pip
        pip install vulture
        pip install -r requirements.txt
    
    - name: Run vulture dead code analysis
      run: |
        vulture src/ --min-confidence 80 --sort-by-size
