name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install code quality tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy black isort bandit safety vulture
        # Install project dependencies if requirements files exist
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        elif [ -f requirements-dev.txt ]; then
          pip install -r requirements-dev.txt
        fi
        # Install project in development mode if setup.py exists
        if [ -f setup.py ]; then
          pip install -e .
        fi
    
    - name: Run Black formatting check
      run: |
        black --check --diff --line-length=100 src/ tests/ scripts/ || {
          echo "::error::Black formatting issues found. Run 'black --line-length=100 src/ tests/ scripts/' to fix."
          exit 1
        }
    
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff --profile=black --line-length=100 src/ tests/ scripts/ || {
          echo "::error::Import sorting issues found. Run 'isort --profile=black --line-length=100 src/ tests/ scripts/' to fix."
          exit 1
        }
    
    - name: Run flake8 linting
      run: |
        flake8 src/ tests/ scripts/ \
          --max-line-length=100 \
          --extend-ignore=E203,W503 \
          --exclude=__pycache__,*.pyc,.git,venv*,env,build,dist
    
    - name: Run mypy type checking
      run: |
        # Only run mypy if we have installed dependencies
        if python -c "import src" 2>/dev/null; then
          mypy src/ --ignore-missing-imports --no-strict-optional --show-error-codes
        else
          echo "::warning::Skipping mypy - unable to import project modules"
        fi
      continue-on-error: true
    
    - name: Run bandit security analysis
      run: |
        bandit -r src/ -f json -o bandit-report.json -ll || true
        bandit -r src/ --severity-level medium --confidence-level medium || {
          echo "::warning::Bandit found potential security issues"
        }
      continue-on-error: true
    
    - name: Run safety dependency check
      run: |
        safety check --json --output safety-report.json || true
        safety check || {
          echo "::warning::Safety found potential vulnerabilities"
        }
      continue-on-error: true
    
    - name: Run dead code analysis
      run: |
        vulture src/ --min-confidence 80 --sort-by-size || {
          echo "::warning::Vulture found potential dead code"
        }
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.run_id }}
        path: |
          bandit-report.json
          safety-report.json
        retention-days: 30

  pre-commit-check:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    
    - name: Check for pre-commit config
      run: |
        if [ ! -f .pre-commit-config.yaml ]; then
          echo "::warning::No .pre-commit-config.yaml found, skipping pre-commit checks"
          exit 0
        fi
    
    - name: Install pre-commit hooks
      run: |
        if [ -f .pre-commit-config.yaml ]; then
          pre-commit install-hooks
        fi
    
    - name: Run pre-commit hooks
      run: |
        if [ -f .pre-commit-config.yaml ]; then
          pre-commit run --all-files --show-diff-on-failure
        else
          echo "Skipping pre-commit - no configuration file"
        fi
