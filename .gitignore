# Specify AI agent directory (track constitution and templates, ignore output)<<<<<<< HEAD

.specify/out/# Python

.specify/scripts/__pycache__/

*.py[cod]

# Python*$py.class

__pycache__/*.so

*.py[cod].Python

*$py.class=======

*.pyc# Specify AI agent directory (track constitution and templates, ignore output)

*.pyo.specify/out/

*.pyd.specify/scripts/

*.pyi

*.so# Python virtual environments

.Python.venv/

venv/

.venv/

# Distribution / packagingenv/

build/ENV/

develop-eggs/venv-coral/

dist/

downloads/# Python cache and compiled files

eggs/__pycache__/

.eggs/*.pyc

lib/*.pyo

lib64/*.pyd

parts/*.pyi

sdist/.Python

var/*.so

wheels/

share/python-wheels/# Distribution / packaging

*.egg-info/>>>>>>> 49ef02b (docs: amend constitution to v2.0.0 (Engineering Plan alignment + safety-first mandates))

lawnberry_pi.egg-info/build/

.installed.cfgdevelop-eggs/

*.eggdist/

MANIFESTdownloads/

eggs/

# Virtual environments.eggs/

.venv/lib/

venv/lib64/

ENV/parts/

env/sdist/

.virtualenv/var/

venv-coral/wheels/

<<<<<<< HEAD

# PyInstallershare/python-wheels/

*.manifest*.egg-info/

*.spec.installed.cfg

*.egg

# TestingMANIFEST

.pytest_cache/

.coverage# Virtual environments

.coverage.*.venv/

.tox/venv/

.nox/ENV/

htmlcov/env/

nosetests.xml.virtualenv/

coverage.xml

*.cover# IDEs

.hypothesis/.vscode/

.mypy_cache/=======

.dmypy.json*.egg-info/

dmypy.jsonlawnberry_pi.egg-info/

pytestdebug.log.installed.cfg

.cache*.egg



# Database files# PyInstaller

*.db*.manifest

*.sqlite*.spec

*.sqlite3

data/*.sqlite3# Unit test / coverage reports

data/*.dbhtmlcov/

data/lawnberry.db.tox/

data/lawnberry.db-journal.nox/

.coverage

# Logs.coverage.*

logs/.cache

*.lognosetests.xml

*.potcoverage.xml

npm-debug.log**.cover

yarn-debug.log*.hypothesis/

yarn-error.log*.pytest_cache/

pnpm-debug.log*pytestdebug.log

lerna-debug.log*

backend.log# Database files

frontend.log*.sqlite3

*.db

# Runtime datadata/*.sqlite3

data/*.jsondata/*.db

data/*.csv

data/exports/# Logs

memory/*.json*.log

logs/*.log

# Process files*.pot

*.pidbackend.log

*.seedfrontend.log

*.pid.lock

# Process files

# Frontend (Node.js / Vue)*.pid

node_modules/*.seed

.npm*.pid.lock

.yarn/

.pnp.*# Frontend (Node.js / Vue)

node_modules/

# Frontend build outputs.npm

frontend/node_modules/.yarn/

frontend/dist/.pnp.*

frontend/.vite/npm-debug.log*

frontend/dist-ssr/yarn-debug.log*

*.localyarn-error.log*

pnpm-debug.log*

# IDEs and editorslerna-debug.log*

.vscode/*

!.vscode/extensions.json# Frontend build outputs

!.vscode/settings.jsonfrontend/dist/

.idea/frontend/.vite/

*.swpfrontend/dist-ssr/

*.swo*.local

*~

# Frontend IDE

# OS files.vscode/*

.DS_Store!.vscode/extensions.json

.DS_Store?!.vscode/settings.json

._*>>>>>>> 49ef02b (docs: amend constitution to v2.0.0 (Engineering Plan alignment + safety-first mandates))

.Spotlight-V100.idea/

.Trashes*.swp

ehthumbs.db*.swo

Thumbs.db*~

.DS_Store

# Secrets and environment<<<<<<< HEAD

.env

.env.local# Testing

.env.*.local.pytest_cache/

.env.production.coverage

config/secrets.json.tox/

config/*.keyhtmlcov/

config/*.pem.mypy_cache/

.dmypy.json

# Temporary filesdmypy.json

tmp/

temp/# Database

*.tmp*.db

*.temp*.sqlite

*.bak*.sqlite3

.cache/data/lawnberry.db

.temp/data/lawnberry.db-journal



# Backups# Logs

backups/logs/

*.backup*.log

npm-debug.log*

# Build artifactsyarn-debug.log*

*.tar.gzyarn-error.log*

*.zip

# Runtime data

# Hardware integration (temporary/local testing)data/*.json

hw-integration/data/*.csv

data/exports/

# Compiled RoboHAT code (built locally)memory/*.json

robohat-rp2040-code/*.uf2

# Hardware integration (temporary/local testing)

# UV lock file (managed by uv)hw-integration/

uv.lock

# Compiled RoboHAT code (built locally)

# Chat modes (temporary agent context)robohat-rp2040-code/*.uf2

.github/chatmodes/=======

Thumbs.db

# Logo image (uncomment if proprietary)

# LawnBerryPi_logo.png# Environment variables

.env
.env.local
.env.*.local
.env.production

# Backups
backups/
*.backup
*.bak
>>>>>>> 49ef02b (docs: amend constitution to v2.0.0 (Engineering Plan alignment + safety-first mandates))

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

<<<<<<< HEAD
# Secrets and environment
.env
.env.local
.env.*.local
config/secrets.json
config/*.key
config/*.pem

# Temporary files
tmp/
temp/
*.tmp
*.bak
*.swp
*~

# Build artifacts
*.tar.gz
*.zip

# Frontend specific (covered by frontend/.gitignore but listed for clarity)
frontend/node_modules/
frontend/dist/
frontend/.vite/

# Python package artifacts
lawnberry_pi.egg-info/

# UV lock file (managed by uv, not committed)
uv.lock

# Chat modes (temporary agent context)
.github/chatmodes/

# Logo image (uncomment if proprietary)
# LawnBerryPi_logo.png
=======
# Temporary files
*.tmp
*.temp
.cache/
.temp/

# Hardware test outputs (optional - keep if needed for debugging)
# hw-integration/test_results/

# Editor configurations (keep project settings, ignore personal)
.vscode/settings.json
.vscode/*.code-workspace

# UV lock file (keep for reproducibility)
# uv.lock is tracked for dependency locking
>>>>>>> 49ef02b (docs: amend constitution to v2.0.0 (Engineering Plan alignment + safety-first mandates))

# -----------------------------
# Virtual environments (explicit)
# Ensure Python virtual envs are ignored throughout the repo
.venv/
venv/
env/
ENV/
.virtualenv/
venv-coral/
