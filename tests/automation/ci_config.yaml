# CI/CD Test Configuration for Comprehensive Testing Framework

test_suites:
  unit:
    enabled: true
    parallel: true
    timeout: 300
    retry_failed: 1
    markers: ["unit"]
    coverage_threshold: 85.0
    
  integration:
    enabled: true
    parallel: false
    timeout: 600
    retry_failed: 1
    markers: ["integration"]
    coverage_threshold: 80.0
    dependencies:
      - redis
      - mosquitto
    
  safety:
    enabled: true
    parallel: false
    timeout: 300
    retry_failed: 0  # No retries for safety tests
    markers: ["safety"]
    required_coverage: 100.0
    critical: true
    
  performance:
    enabled: true
    parallel: false
    timeout: 900
    retry_failed: 1
    markers: ["performance"]
    benchmarks:
      emergency_stop_response_ms: 100
      sensor_fusion_latency_ms: 50
      vision_processing_ms: 100
      memory_leak_mb: 50
    
  hardware:
    enabled: false  # Disabled in CI by default
    parallel: false
    timeout: 1200
    retry_failed: 0
    markers: ["hardware"]
    requires_hardware: true

coverage:
  overall_threshold: 90.0
  safety_critical_threshold: 100.0
  fail_under_threshold: true
  generate_html_report: true
  exclude_patterns:
    - "*/tests/*"
    - "*/test_*"
    - "*/__pycache__/*"
    - "*/conftest.py"
  include_patterns:
    - "src/*"
  branch_coverage: true
  
reporting:
  generate_junit_xml: true
  generate_html_report: true
  generate_json_report: true
  upload_results: true
  output_directory: "test_reports"
  keep_reports: 30  # Days to keep reports
  
notifications:
  enabled: true
  on_failure_only: false
  channels:
    - type: "github_status"
      enabled: true
    - type: "slack"
      enabled: false
      webhook_url: "${SLACK_WEBHOOK_URL}"
    - type: "email"
      enabled: false
      recipients: []

environment:
  python_version: "3.9"
  system_packages:
    - "libgl1-mesa-glx"
    - "libglib2.0-0" 
    - "libsm6"
    - "libxext6"
    - "libxrender-dev"
    - "libgomp1"
  
  python_packages:
    - "pytest>=7.0.0"
    - "pytest-asyncio>=0.21.0"
    - "pytest-cov>=4.1.0"
    - "pytest-mock>=3.11.0"
    - "pytest-benchmark>=4.0.0"
    - "pytest-html>=3.2.0"
    - "pytest-xdist>=3.3.0"
    - "pytest-timeout>=2.1.0"
    
services:
  redis:
    image: "redis:7-alpine"
    ports:
      - "6379:6379"
    health_check:
      command: "redis-cli ping"
      interval: 10
      timeout: 5
      retries: 5
      
  mosquitto:
    image: "eclipse-mosquitto:2"
    ports:
      - "1883:1883"
    health_check:
      command: "mosquitto_sub -t 'test' -C 1 -W 1"
      interval: 10
      timeout: 5
      retries: 5

quality_gates:
  # Minimum requirements for passing
  min_test_success_rate: 95.0
  min_overall_coverage: 90.0
  min_safety_coverage: 100.0
  max_performance_regression: 10.0  # Percent
  
  # Blocking conditions
  block_on_safety_failure: true
  block_on_coverage_drop: true
  block_on_performance_regression: false
  
artifacts:
  retention_days: 90
  compress: true
  include:
    - "test_reports/**"
    - "htmlcov/**"
    - "junit-*.xml"
    - "coverage-*.xml"
    - "benchmark-*.json"
  exclude:
    - "**/__pycache__/**"
    - "**/*.pyc"
    - "**/tmp/**"

security:
  dependency_check: true
  code_analysis: true
  secret_scanning: true
  vulnerability_scanning: true
  
matrix:
  # Test matrix for different configurations
  python_versions: ["3.9", "3.10", "3.11"]
  os_versions: ["ubuntu-latest"]
  test_configurations:
    - name: "standard"
      suites: ["unit", "integration", "safety"]
    - name: "performance"
      suites: ["unit", "safety", "performance"]
    - name: "full"
      suites: ["unit", "integration", "safety", "performance"]
