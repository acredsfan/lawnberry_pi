# Weather Service Configuration for LawnBerry Pi Autonomous Mower

# Google Weather API Configuration
api_key: ""  # Set your Google Weather API key here
location:
  latitude: 40.7128   # Set your location coordinates
  longitude: -74.0060

# API Usage Limits
api_rate_limit:
  calls_per_hour: 100
  calls_per_day: 1000

# Cache Settings
cache_duration: 300  # 5 minutes in seconds

# Operating Limits
temperature_limits:
  min: 5.0   # Minimum temperature for operation (Celsius)
  max: 40.0  # Maximum temperature for operation (Celsius)

wind_limits:
  max: 10.0  # Maximum wind speed for safe operation (m/s)

# Precipitation Settings
precipitation:
  threshold: 0.1        # Minimum precipitation to stop mowing (mm/hour)
  delay_after_rain: 120 # Minutes to wait after rain stops

# Safety Settings
safety:
  humidity_threshold: 95    # Local humidity % indicating recent rain
  alert_severity_levels:
    - "minor"
    - "moderate" 
    - "severe"
    - "extreme"
  emergency_conditions:
    - "severe"
    - "extreme"

# Solar Charging Prediction
solar:
  efficiency_calculation: true
  daylight_hours:
    start: 6    # Earliest hour for solar charging
    end: 20     # Latest hour for solar charging
  cloud_impact_factor: 0.8  # How much clouds reduce efficiency

# Mowing Schedule Optimization
scheduling:
  preferred_hours:
    start: 8    # Preferred start hour
    end: 18     # Preferred end hour
  avoid_hours:
    - 12  # Avoid noon (hottest)
    - 13  # Avoid 1 PM
  session_duration: 180  # Preferred mowing session length (minutes)
  weather_buffer: 60     # Minutes of good weather needed before starting

# Data Storage
data:
  history_retention_days: 30
  backup_interval_hours: 24
  export_format: "json"

# Integration Settings
integration:
  mqtt_topics:
    current_weather: "lawnberry/weather/current"
    forecast: "lawnberry/weather/forecast"
    alerts: "lawnberry/weather/alerts" 
    mowing_conditions: "lawnberry/weather/mowing_conditions"
    solar_prediction: "lawnberry/weather/solar_prediction"
  
  # Service dependencies
  requires_services:
    - "hardware_interface"
    - "communication_system"
  
  # Health check settings
  health_check:
    interval_seconds: 60
    timeout_seconds: 30
    max_failures: 3

# Logging Configuration
logging:
  level: "INFO"
  log_weather_data: true
  log_api_calls: true
  log_decision_making: true
