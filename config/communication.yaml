# Communication System Configuration
# MQTT-based messaging infrastructure for microservices coordination

# MQTT Broker Configuration
broker:
  # Local broker settings
  port: 1883
  bind_address: "localhost"
  keepalive: 60
  max_connections: 100
  
  # Persistence settings
  persistence: true
  persistence_location: "/tmp/mosquitto_lawnberry"
  
  # Logging
  log_level: "warning"  # error, warning, notice, information, debug
  
  # Authentication (disabled for local development)
  auth:
    enabled: false
    username: "lawnberry"
    password: "secure_password_change_me"
  
  # TLS encryption (disabled for local development)
  tls:
    enabled: false
    cert_file: null
    key_file: null
    ca_file: null
  
  # WebSocket support for web UI
  websockets:
    enabled: true
    port: 9001

# MQTT Client Configuration
client:
  # Connection settings
  reconnect_delay: 5        # Initial reconnect delay (seconds)
  max_reconnect_delay: 300  # Maximum reconnect delay (seconds)  
  reconnect_backoff: 2.0    # Exponential backoff multiplier
  message_timeout: 30       # Message timeout (seconds)
  queue_size: 1000          # Max queued messages
  
  # Performance settings
  compression_enabled: true
  
  # Rate limiting (messages per minute)
  rate_limits:
    sensor_data: 100
    commands: 60
    status: 20
    general: 200

# Service Manager Configuration
services:
  # Health monitoring
  heartbeat_interval: 30    # Heartbeat interval (seconds)
  heartbeat_timeout: 90     # Consider service offline after (seconds)
  dependency_timeout: 60    # Dependency resolution timeout (seconds)
  
  # Service discovery
  discovery_timeout: 300    # Discovery cache timeout (seconds)

# Topic Configuration
topics:
  # Base namespace
  namespace: "lawnberry"
  
  # QoS levels by message type
  qos:
    sensor_data: 1
    commands: 2
    responses: 2
    status: 1
    events: 1
    alerts: 2
  
  # Retained messages
  retained:
    - "system/health"
    - "system/services/+/status"
    - "navigation/position"
    - "navigation/status"
    - "power/battery"
    - "power/solar"
    - "weather/current"
    - "weather/forecast"
    - "safety/alerts/+"
    - "safety/emergency_stop"
  
  # Rate limits by topic pattern (messages per minute)
  rate_limits:
    "sensors/+/data": 100
    "sensors/+/status": 20
    "navigation/position": 20
    "navigation/path": 10
    "safety/hazards": 50
    "power/battery": 20
    "power/solar": 20
    "power/consumption": 60
    "vision/detections": 30
    "vision/frame_analysis": 10
    "weather/current": 12
    "weather/alerts": 20

# Message Protocols
protocols:
  # Message validation
  validation:
    enabled: true
    max_payload_size: 10000  # bytes
    max_message_age: 300     # seconds
  
  # Message compression
  compression:
    enabled: true
    threshold: 1000  # Compress messages larger than (bytes)
  
  # Message retry
  retry:
    max_retries: 3
    retry_delay: 5      # seconds
    retry_backoff: 2.0

# Security Configuration
security:
  # Message encryption (for future use)
  encryption:
    enabled: false
    algorithm: "AES-256-GCM"
  
  # Message signing (for future use) 
  signing:
    enabled: false
    algorithm: "HMAC-SHA256"
  
  # Access control
  access_control:
    enabled: false
    rules: []

# Monitoring and Debugging
monitoring:
  # Performance metrics
  metrics:
    enabled: true
    collection_interval: 60  # seconds
    retention_period: 86400  # 24 hours
  
  # Message logging
  logging:
    enabled: true
    log_level: "INFO"
    log_messages: false      # Log individual messages (debug only)
    log_performance: true    # Log performance metrics
  
  # Health checks
  health_checks:
    enabled: true
    check_interval: 30       # seconds
    timeout: 10              # seconds

# Integration Configuration
integration:
  # Web UI WebSocket bridge
  websocket_bridge:
    enabled: true
    port: 9002
    max_connections: 10
  
  # Home Assistant MQTT Discovery
  home_assistant:
    enabled: false
    discovery_prefix: "homeassistant"
    device_name: "Lawnberry Mower"
    device_id: "lawnberry_01"
  
  # Cloud logging (optional)
  cloud_logging:
    enabled: false
    endpoint: null
    api_key: null
    batch_size: 100
    flush_interval: 300  # seconds

# Service Definitions
service_definitions:
  # Hardware interface service
  hardware_interface:
    service_type: "hardware"
    dependencies: []
    topics:
      subscribe:
        - "commands/hardware"
        - "system/health_check"
      publish:
        - "sensors/+/data"
        - "sensors/+/status"
        - "system/services/hardware_interface/status"
  
  # Weather service
  weather_service:
    service_type: "weather"
    dependencies: ["hardware_interface"]
    topics:
      subscribe:
        - "commands/weather"
        - "system/health_check"
      publish:
        - "weather/current"
        - "weather/forecast"
        - "weather/alerts"
        - "system/services/weather_service/status"
  
  # Navigation service
  navigation_service:
    service_type: "navigation"
    dependencies: ["hardware_interface", "sensor_fusion"]
    topics:
      subscribe:
        - "commands/navigation"
        - "sensors/+/data"
        - "safety/emergency_stop"
      publish:
        - "navigation/position"
        - "navigation/path"
        - "navigation/status"
        - "system/services/navigation_service/status"
  
  # Safety service
  safety_service:
    service_type: "safety"
    dependencies: ["hardware_interface", "sensor_fusion", "vision_service"]
    topics:
      subscribe:
        - "commands/safety"
        - "sensors/+/data"
        - "vision/detections"
        - "navigation/position"
      publish:
        - "safety/alerts/+"
        - "safety/emergency_stop"
        - "safety/hazards"
        - "system/services/safety_service/status"
  
  # Power management service
  power_service:
    service_type: "power"
    dependencies: ["hardware_interface", "weather_service"]
    topics:
      subscribe:
        - "commands/power"
        - "weather/current"
        - "navigation/position"
      publish:
        - "power/battery"
        - "power/solar" 
        - "power/consumption"
        - "system/services/power_service/status"
  
  # Vision service
  vision_service:
    service_type: "vision"
    dependencies: ["hardware_interface"]
    topics:
      subscribe:
        - "commands/vision"
        - "system/health_check"
      publish:
        - "vision/detections"
        - "vision/frame_analysis"
        - "system/services/vision_service/status"
  
  # Web API service
  web_api:
    service_type: "web_api"
    dependencies: ["communication_system"]
    topics:
      subscribe:
        - "system/+"
        - "sensors/+/+"
        - "navigation/+"
        - "safety/+"
        - "power/+"
        - "vision/+"
        - "weather/+"
      publish:
        - "commands/+"
        - "system/services/web_api/status"

# Development and Testing
development:
  # Mock services for testing
  mock_services:
    enabled: false
    services: []
  
  # Debug settings
  debug:
    enabled: false
    log_all_messages: false
    simulate_failures: false
    latency_simulation: 0  # milliseconds
